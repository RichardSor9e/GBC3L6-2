package ru.geekbrains.guess_the_number;

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ваша задача угадать число.");
        int range = 10;
        int number = (int) (Math.random() * range);
        while (true) {
            System.out.println("Угадайте число от 0 до " + range);
            int input_number = scanner.nextInt();
            if (input_number == number) {
                System.out.println("Вы угадали.");
                break;
            } else if (input_number > number) {
                System.out.println("Загаданное число меньше");
            } else {
                System.out.println("Загаданное число больше");
            }
        }
        scanner.close();
    }
}

//7. ** Написать метод, в который передается не пустой одномерный целочисленный массив, метод должен вернуть
//        true, если в массиве есть место, в котором сумма левой и правой части массива равны.
//
//        **Примеры:
//        checkBalance([2, 2, 2, 1, 2, 2, ||| 10, 1]) → true, т.е. 2 + 2 + 2 + 1 + 2 + 2 = 10 + 1
//        checkBalance([1, 1, 1, ||| 2, 1]) → true, т.е. 1 + 1 + 1 = 2 + 1
//
//        граница показана символами |||, эти символы в массив не входят и не имеют никакого отношения к ИЛИ.
//        8. *** Написать метод, которому на вход подается одномерный массив и число n (может быть
//        положительным, или отрицательным), при этом метод должен сместить все элементы массива на
//        n позиций. Элементы смещаются циклично. Для усложнения задачи нельзя пользоваться вспомогательными
//        массивами. Примеры: [ 1, 2, 3 ] при n = 1 (на один вправо) -> [ 3, 1, 2 ]; [ 3, 5, 6, 1] при n = -2
//        (на два влево) -> [ 6, 1, 3, 5 ]. При каком n в какую сторону сдвиг можете выбирать сами.
